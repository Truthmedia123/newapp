name: Accessibility & Performance Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  audit:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Build application
        run: npm run build:production
        env:
          NODE_ENV: production
          
      - name: Start preview server
        run: |
          npm run pages:dev &
          sleep 30  # Wait for server to start
        env:
          NODE_ENV: production
          
      - name: Wait for server to be ready
        run: |
          timeout 60s bash -c '
            until curl -f http://localhost:8787 > /dev/null 2>&1; do
              echo "Waiting for server..."
              sleep 2
            done
          '
          
      - name: Install audit tools
        run: |
          npm install -g @axe-core/cli lighthouse-ci @lhci/cli
          
      - name: Run Accessibility Audit with axe-core
        run: |
          npx axe-cli http://localhost:8787 \
            --include "main" \
            --exclude "iframe" \
            --tags "wcag2a,wcag2aa,wcag21a,wcag21aa" \
            --reporter json \
            --output-file axe-results.json \
            --timeout 30000 \
            --exit || true
            
      - name: Run Accessibility Audit on key pages
        run: |
          # Test multiple pages for comprehensive coverage
          npx axe-cli http://localhost:8787 --output-file axe-home.json --reporter json || true
          npx axe-cli http://localhost:8787/vendors/all --output-file axe-vendors.json --reporter json || true
          npx axe-cli http://localhost:8787/search --output-file axe-search.json --reporter json || true
          npx axe-cli http://localhost:8787/tools --output-file axe-tools.json --reporter json || true
          npx axe-cli http://localhost:8787/blog --output-file axe-blog.json --reporter json || true
          
      - name: Merge accessibility results
        run: |
          echo '{"results": []}' > merged-axe-results.json
          if [ -f axe-home.json ]; then
            cat axe-home.json >> merged-axe-results.json
          fi
          echo "Accessibility audit completed"
          
      - name: Run Lighthouse CI Audit
        run: |
          npx lhci autorun --config=.lighthouserc.json || true
        env:
          LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
          LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.head_commit.timestamp }}
          LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.ref_name }}
          
      - name: Run Custom Performance Tests
        run: |
          # Test page load times and critical metrics
          node scripts/performance-test.js
          
      - name: Generate Audit Report
        run: |
          node scripts/generate-audit-report.js
          
      - name: Upload Accessibility Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-reports-${{ matrix.node-version }}
          path: |
            axe-*.json
            merged-axe-results.json
            .lighthouseci/
            audit-report.html
            performance-results.json
          retention-days: 30
          
      - name: Upload Lighthouse Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports-${{ matrix.node-version }}
          path: |
            .lighthouseci/
            lighthouse-*.html
            lighthouse-*.json
          retention-days: 30
          
      - name: Comment PR with Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## 🔍 Accessibility & Performance Audit Results\n\n';
            
            // Add accessibility results
            try {
              const axeResults = JSON.parse(fs.readFileSync('merged-axe-results.json', 'utf8'));
              const violations = axeResults.violations || [];
              
              comment += `### ♿ Accessibility Results\n`;
              comment += `- **Violations Found:** ${violations.length}\n`;
              
              if (violations.length > 0) {
                comment += `\n#### Critical Issues:\n`;
                violations.slice(0, 5).forEach((violation, index) => {
                  comment += `${index + 1}. **${violation.id}**: ${violation.description}\n`;
                });
                
                if (violations.length > 5) {
                  comment += `\n*...and ${violations.length - 5} more issues. See full report in artifacts.*\n`;
                }
              } else {
                comment += `✅ No accessibility violations found!\n`;
              }
            } catch (error) {
              comment += `❌ Could not parse accessibility results: ${error.message}\n`;
            }
            
            // Add performance results
            try {
              const perfResults = JSON.parse(fs.readFileSync('performance-results.json', 'utf8'));
              comment += `\n### ⚡ Performance Results\n`;
              comment += `- **Load Time:** ${perfResults.loadTime}ms\n`;
              comment += `- **First Contentful Paint:** ${perfResults.fcp}ms\n`;
              comment += `- **Largest Contentful Paint:** ${perfResults.lcp}ms\n`;
              comment += `- **Cumulative Layout Shift:** ${perfResults.cls}\n`;
            } catch (error) {
              comment += `\n### ⚡ Performance Results\n`;
              comment += `❌ Could not parse performance results: ${error.message}\n`;
            }
            
            comment += `\n📊 Full reports are available in the workflow artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Fail on Critical Issues
        run: |
          node scripts/check-audit-thresholds.js
          
      - name: Cleanup
        if: always()
        run: |
          pkill -f "pages:dev" || true
          pkill -f "8787" || true

  # Separate job for security audit
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run security audit
        run: |
          npm audit --audit-level=moderate --json > security-audit.json || true
          
      - name: Run dependency check
        run: |
          npx audit-ci --config audit-ci.json || true
          
      - name: Upload Security Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-report
          path: |
            security-audit.json
            audit-ci-report.json
          retention-days: 30